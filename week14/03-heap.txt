힙 heap
:완전 이진 트리 형태의 그래프 (특정한 규칙을 가진 트리 기반의 자료구조)
 *완전 이진 트리: 왼쪽에서 오르쪽으로 빠짐없이 채워진 트리 구조

[특징]
1.최대값, 최솟값을 빠르게 찾을 수 있음
-최대힙 Max Heap: 부모노드 >= 자식 노드 (루트가 가장 큰 값)
-최소힙 Min Heap: 부모노드 <= 자식 노드 (루트가 가장 작은 값)
-> 우선순위 큐를 구현하는데 사용

[시간 복잡도]
연산	            시간 복잡도
삽입 (insert)	    O(log n)
삭제 (delete)	    O(log n)
최소/최댓값 확인	 O(1)

[파이썬에서의 heapq 모듈]
*기본적으로 최소 힙 모듈만 제공
 -> 최대힙을 만들고 싶다면 값을 음수로 바꿔 넣어야 함

import heapq

함수	                        설명
heapq.heapify(lst)	            리스트를 힙 구조로 변환
heapq.heappush(heap, item)	    힙에 원소 추가
heapq.heappop(heap)	            힙에서 가장 작은 원소 제거 후 반환
heapq.heappushpop(heap, item)	원소 추가 후 가장 작은 원소 제거
heapq.heapreplace(heap, item)	가장 작은 원소 제거 후 새 원소 추가
heapq.nlargest(n, iterable)	    가장 큰 n개 원소 반환 (힙 아님)
heapq.nsmallest(n, iterable)	가장 작은 n개 원소 반환 (힙 아님)

[최소힙 예제]
import heapq
heap = []
heapq.heappush(heap, 3)
heapq.heappush(heap, 1)'
heapq.heappush(heap, 5)
print(heap.heappop(heap)) #1

[최대힙 예제]
import heapq
heap = []
heapq.heappush(heap, -3)
heapq.heappush(heap, -1)
heapq.heappush(heap, -5)
print(-heapq.heappop(heap)) #5